/**
 * Eurofurence API for Mobile Apps
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class RegSysAlternativePinRequest {
  
  @SerializedName("RegNoOnBadge")
  private String regNoOnBadge = null;
  @SerializedName("NameOnBadge")
  private String nameOnBadge = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getRegNoOnBadge() {
    return regNoOnBadge;
  }
  public void setRegNoOnBadge(String regNoOnBadge) {
    this.regNoOnBadge = regNoOnBadge;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getNameOnBadge() {
    return nameOnBadge;
  }
  public void setNameOnBadge(String nameOnBadge) {
    this.nameOnBadge = nameOnBadge;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegSysAlternativePinRequest regSysAlternativePinRequest = (RegSysAlternativePinRequest) o;
    return (this.regNoOnBadge == null ? regSysAlternativePinRequest.regNoOnBadge == null : this.regNoOnBadge.equals(regSysAlternativePinRequest.regNoOnBadge)) &&
        (this.nameOnBadge == null ? regSysAlternativePinRequest.nameOnBadge == null : this.nameOnBadge.equals(regSysAlternativePinRequest.nameOnBadge));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.regNoOnBadge == null ? 0: this.regNoOnBadge.hashCode());
    result = 31 * result + (this.nameOnBadge == null ? 0: this.nameOnBadge.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegSysAlternativePinRequest {\n");
    
    sb.append("  regNoOnBadge: ").append(regNoOnBadge).append("\n");
    sb.append("  nameOnBadge: ").append(nameOnBadge).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
